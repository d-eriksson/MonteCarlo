1. Planes reworked
  a) Is not made up of triangles
  b) Has its own functions for rayIntersection() and getSampleLight()
2. Scene is reworked
  a) Scene is now made up of mostly planes and not triangles
  b) Objects are now added in scene's constructor
  c) Box is now a function that adds planes to the scene (instead of a class)
  d) addObject() now automatically adds object to lightList if material is Emissive
3. Light calculations improved (but still needs fine tuning)
  a) When casting new rays from diffuse surfaces: Now samples the hemisphere
  uniformly using cosine weighted distribution. Before, most rays were sent
  around the pole of the hemisphere (image example on google drive).
  b) Removed children and branching for now because it makes the code more readable. This
  means that the number of samples in now controlled by what used to be "anti aliasing"
4. Improved emitters/lights
  a) Hitting emitters now returns the emitter's brightness and not just (1, 1, 1)
  b) Emitter's backsides are now black
  c) Fixed an issue with the dot product being negative for shadow rays. Before
  the fix, shadow rays only returned light from the backside of emitters while
  normal rays returned light from the front side.
5. Added Glossy material. It's a mix of diffuse and reflective.
6. Added textured material. (so far only for planes)
7. Improved render loop and multithreading capabilities
  a) Added dynamic thread allocation using ExecutorService. A queue of rendering
  tasks are submitted to the ThreadPool. As soon as a thread is done with a task
  it starts on the next task in the queue
  b) Now renders a number of small squares to work better with the multithreading
8. User interface
  a) Render settings are now controlled during runtime in a GUI.
  b) Ported from awt/swing to the more modern JavaFX (bufferedimage still needs to be replaced)
  c) Added more extensive UI with progress bar and custom close action
